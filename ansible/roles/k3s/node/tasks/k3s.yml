---
- name: Copy K3s killall script
  register: k3s_killall
  template:
    src: "k3s-killall.sh.j2"
    dest: "/usr/local/bin/k3s-killall.sh"
    owner: root
    group: root
    mode: 0755

- name: Copy K3s Uninstall Script
  register: k3s_agent_uninstall
  template:
    src: "k3s-agent-uninstall.sh.j2"
    dest: "/usr/local/bin/k3s-agent-uninstall.sh"
    owner: root
    group: root
    mode: 0755

- name: Copy K3s service file (arm64)
  template:
    src: "k3s-agent-arm64.service.j2"
    dest: "{{ systemd_dir }}/k3s-agent.service"
    owner: root
    group: root
    mode: 0755
  when: ( ansible_facts.architecture is search "arm" or ansible_facts.architecture is search "aarch64" ) and (ansible_facts.userspace_bits == "64" )

- name: Copy K3s service env file (arm64)
  template:
    src: "k3s-agent-arm64.service.env.j2"
    dest: "{{ systemd_dir }}/k3s-agent.service.env"
    owner: root
    group: root
    mode: 0400
  when: ( ansible_facts.architecture is search "arm" or ansible_facts.architecture is search "aarch64" ) and (ansible_facts.userspace_bits == "64" )

- name: Copy K3s service file (x86_x64)
  template:
    src: "k3s-agent.service.j2"
    dest: "{{ systemd_dir }}/k3s-agent.service"
    owner: root
    group: root
    mode: 0755
  when: ( ansible_facts.architecture == "x86_64" )

- name: Copy K3s service env file (x86_x64)
  template:
    src: "k3s-agent.service.env.j2"
    dest: "{{ systemd_dir }}/k3s-agent.service.env"
    owner: root
    group: root
    mode: 0400
  when: ( ansible_facts.architecture == "x86_64" )

- name: Enable and check K3s service
  systemd:
    name: k3s-agent
    daemon_reload: yes
    state: restarted
    enabled: yes

- name: Create kubectl  link
  file:
    src: "/usr/local/bin/k3s"
    dest: "/usr/local/bin/kubectl"
    state: link

- name: Create crictl link
  file:
    src: "/usr/local/bin/k3s"
    dest: "/usr/local/bin/crictl"
    state: link

- name: Disable and stop K3s Service
  systemd:
    name: k3s-agent
    enabled: no
    state: stopped
  when: ( k3sfile.changed == True )

- name: Enable and check K3s service
  systemd:
    name: k3s-agent
    daemon_reload: yes
    state: restarted
    enabled: yes
  when: ( k3sfile.changed == True )
